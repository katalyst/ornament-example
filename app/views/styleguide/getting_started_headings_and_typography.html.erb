<%= content_for :title, "Headings and Typography" -%>

<div class="content-spacing content-lists">

  <h2 class="heading-two">Ornament is an empty canvas.</h2>

  <p>By default, Ornament typography is very simple and essentially <em>unstyled</em>.</p>

  <p>The reason being is that we belive that heading styles and the heading tags should be separate. Semantically, you may want a <code>h3</code>, but you actually want that <code>h3</code> to be styled up as a <code>h4</code>. Instead of having a default style for <code>h3</code> and then over-ride it for <code>h4</code>, why not just cherry pick our heading styles from the very beginning. </p>

  <p>This results in a nice workflow in which you can create heading tags in the correct semenatic way, without having to worry about how the styles are going to cascade.</p>

  <h2 class="heading-two">Applying heading classes</h2>

  <p>Heading classes are simply namespaced as a <code>heading-</code>.</p>

  <ul>
    <li><span class="heading-one">.heading-one</span></li>
    <li><span class="heading-two">.heading-two</span></li>
    <li><span class="heading-three">.heading-three</span></li>
    <li><span class="heading-four">.heading-four</span></li>
    <li><span class="heading-five">.heading-five</span></li>
    <li><span class="heading-six">.heading-six</span></li>
  </ul>

  <p>Heading classes are completely separate from heading tags. They can be applied to any tags such as paragraphs or spans.</p>

  <p>On the SASS side, there are also mixins that you can use to apply heading styles without touching HTML.</p>

  <pre class="sg-pre prettyprint">.my-fake-heading { 
  @include heading-one(); 
}</pre>

  <h2 class="heading-two">Applying fonts</h2>

  <p>All fonts are defined in <code>typography.css.scss</code>. These fonts are defined as variables such as <code>$bold-font</code>.</p>

  <p>You can use the <code>font</code> mixin to apply these fonts:</p>

  <pre class="sg-pre prettyprint">.my-bold-paragraph {
  @include font($bold-font);
}</pre>

  <p>Here are the default font styles:</p>

  <ul>
    <li class="sg--body-font">@include font($body-font);</li>
    <li class="sg--italic-font">@include font($italic-font);</li>
    <li class="sg--bold-font">@include font($bold-font);</li>
    <li class="sg--bold-italic-font">@include font($bold-italic-font);</li>
    <li class="sg--heading-alpha-font">@include font($heading-alpha-font);</li>
    <li class="sg--heading-alpha-font-italic">@include font($heading-alpha-font-italic);</li>
    <li class="sg--heading-beta-font">@include font($heading-beta-font);</li>
    <li class="sg--heading-beta-font-italic">@include font($heading-beta-font-italic);</li>
  </ul>

  <p>These variables can change project-to-project so be sure to check the <code>typography.css.scss</code>Â file to see what font options you have.</p>

  <h2 class="heading-two">Webfont Loader</h2>

  <p>To bring in new webfonts, we use the <a href="https://github.com/typekit/webfontloader" target="_blank">webfont loader</a> from Typekit.</p>

  <p>The definitions are in a partial: <code>/app/views/layouts/_webfonts.html.erb</code></p>

  <p>The documentation for the loader is pretty easy to follow, so adding new fonts from various hosts is pretty effortless.</p>

  <p>Any Javascript that needs to be re-run after fonts have loaded (eg. heights change when fonts load in) can be called again using the <code>active</code> callback.</p>

</div>