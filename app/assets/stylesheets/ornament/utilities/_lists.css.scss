@mixin list-vertical($space: $x-small-unit, $border: false, $all: false) {
  @include pie-clearfix;

  // first level list items
  > li {
    padding: $space 0;
  }

  @if($border != false) {
    @if($all == true) {
      > li {
        border-top: $border;
      }
      > li:last-child {
        border-bottom: $border;
      }
    } @else {
      > li + li {
        border-top: $border;
      }
    }
  }

}

@mixin list-horizontal($space: $x-small-unit, $border: false, $all: false, $delegate: false) {
  @include pie-clearfix;

  // first level list items
  @if($delegate) {
    > li {
      float: left;
    }
    > li #{$delegate} {
      padding: 0 $space;
      display: block;
    }
  } @else {
    > li {
      padding: 0 $space;
      float: left;
    }
  }

  @if($border != false) {
    @if($all == true) {
      > li {
        border-left: $border;
      }
      > li:last-child {
        border-right: $border;
      }
    } @else {
      > li + li {
        border-left: $border;
      }
    }
  }

}

@mixin list-flush($side) {

  // vertical flush
  @if $side == "top" {
    > li:first-child {
      padding-top: 0;
    }
  }
  @if $side == "bottom" {
    > li:last-child {
      padding-bottom: 0;
    }
  }
  @if $side == "top and bottom" {
    > li:first-child {
      padding-top: 0;
    }
    > li:last-child {
      padding-bottom: 0;
    }
  }

  // horizontal flush
  @if $side == "left" {
    > li:first-child {
      padding-left: 0;
    }
  }
  @if $side == "right" {
    > li:last-child {
      padding-right: 0;
    }
  }
  @if $side == "left and right" {
    > li:first-child {
      padding-left: 0;
    }
    > li:last-child {
      padding-right: 0;
    }
  }
}

// Classes

.list-horizontal {
  @include list-horizontal($xxxx-small-unit, false);
  @include list-flush("left and right");
}